{"version":3,"file":"component---src-templates-page-jsx-0f3e84f65db29d5c4982.js","mappings":"yGACAA,EAAOC,QAAU,CAEfC,cAAe,mC,+JCEjB,MAAMC,EAAa,CACjBC,MAAO,UACPC,QAAS,OACTC,WAAY,4CAERC,EAAgB,CACpBC,UAAW,EACXC,aAAc,GACdC,SAAU,KAGNC,EAAkB,CACtBF,aAAc,IAUhBG,EAAAA,GAAQC,KAAKC,IAAAA,eAsBb,UApBqB,KACnB,MAAOC,EAAUC,GAAeC,EAAAA,UAAe,GAE/C,OAAOF,EACL,gBAACG,EAAQ,MAET,gBAAC,KAAgB,CACfC,MAAM,OACNC,cAAgBC,IACTA,GACHL,GAAY,EACd,GAOL,EAII,MAAME,EAAW,IAEpB,wBAAMI,MAAOnB,GACX,sBAAImB,MAAOf,GAAe,kBAC1B,qBAAGe,MAAOX,GAAiB,wDAEzB,2BAOI,KACJ,2BACA,gBAAC,KAAI,CAACY,GAAG,KAAI,WAAc,MAQtBC,EAAO,IAAM,6BAAO,Y,4EClEjCZ,EAAAA,GAAQC,KAAK,oCAkBb,UAfA,SAAsB,GAAW,IAAD,MAAV,KAAEY,GAAM,EAC5B,MACMC,EAAqB,QAAjB,GADKD,aAAI,EAAJA,EAAME,kBACDC,eAAO,aAAd,EAAgBP,QAE7B,OAAKQ,EAAAA,GAAQC,WAAcD,EAAAA,GAAQE,cAAiBL,EAIhD,uBAAKM,UAAU,aACb,gBAAC,KAAgB,CAACb,MAAM,OAAOE,QAASK,KAJrC,gBAAC,UAAY,KAQxB,C","sources":["webpack://my-builder-site/./src/config.js","webpack://my-builder-site/./src/pages/404.js","webpack://my-builder-site/./src/templates/page.jsx"],"sourcesContent":["// using module.exports here so gatsby-config can read it\nmodule.exports = {\n  // TODO: Replace next line with your own public API key\n  builderAPIKey: \"d4173130c72d466386720bb5a107ae34\",\n};\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport builder, { BuilderComponent } from '@builder.io/react';\nimport config from '../config';\n\nconst pageStyles = {\n  color: '#232129',\n  padding: '96px',\n  fontFamily: '-apple-system, Roboto, sans-serif, serif',\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\n\nconst paragraphStyles = {\n  marginBottom: 48,\n};\nconst codeStyles = {\n  color: '#8A6534',\n  padding: 4,\n  backgroundColor: '#FFF4DB',\n  fontSize: '1.25rem',\n  borderRadius: 4,\n};\n\nbuilder.init(config.builderAPIKey);\n\nconst NotFoundPage = () => {\n  const [notFound, setNotFound] = React.useState(false);\n  // modelName is page by default\n  return notFound ? (\n    <NotFound /> // Your 404 content\n  ) : (\n    <BuilderComponent\n      model='page'\n      contentLoaded={(content) => {\n        if (!content) {\n          setNotFound(true);\n        }\n      }}\n    >\n      {/* <div className='loading'>\n        No matching page generated, checking Builder.io ...\n      </div> */}\n    </BuilderComponent>\n  );\n};\nexport default NotFoundPage;\n\nexport const NotFound = () => {\n  return (\n    <main style={pageStyles}>\n      <h1 style={headingStyles}>Page not found</h1>\n      <p style={paragraphStyles}>\n        Sorry ðŸ˜”, we couldnâ€™t find what you were looking for.\n        <br />\n        {process.env.NODE_ENV === 'development' ? (\n          <>\n            <br />\n            Try creating a page in <code style={codeStyles}>src/pages/</code>.\n            <br />\n          </>\n        ) : null}\n        <br />\n        <Link to='/'>Go home</Link>.\n      </p>\n    </main>\n  );\n};\n\n// export default NotFoundPage;\n\nexport const Head = () => <title>Not found</title>;\n","// src/templates/page.jsx\nimport * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Builder, builder, BuilderComponent } from '@builder.io/react';\nimport NotFoundPage from '../pages/404';\n\n// Initialize the Builder SDK with your organization's API Key\n// Find the API Key on: https://builder.io/account/settings\nbuilder.init('d4173130c72d466386720bb5a107ae34');\n\n// Your template populates your Gatsby pages with your Builder page content.\nfunction PageTemplate({ data }) {\n  const models = data?.allBuilderModels;\n  const page = models.onePage?.content;\n\n  if (!Builder.isEditing && !Builder.isPreviewing && !page) {\n    return <NotFoundPage />;\n  } else {\n    return (\n      <div className='hero py-0'>\n        <BuilderComponent model='page' content={page} />\n      </div>\n    );\n  }\n}\n\nexport default PageTemplate;\n\n// pageQuery is a GraphQL query that\n// fetches each page's content from Builder.\n// Your content is rendered within the\n// PageTemplate using BuilderComponent, provided by Builder's SDK.\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    allBuilderModels {\n      onePage(target: { urlPath: $path }, options: { cachebust: true }) {\n        content\n      }\n    }\n  }\n`;\n"],"names":["module","exports","builderAPIKey","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","paragraphStyles","builder","init","config","notFound","setNotFound","React","NotFound","model","contentLoaded","content","style","to","Head","data","page","allBuilderModels","onePage","Builder","isEditing","isPreviewing","className"],"sourceRoot":""}